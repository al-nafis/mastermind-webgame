function getId(e){return document.getElementById(e)}function createDiv(){return document.createElement("DIV")}function displayNone(e){e.style.display="none"}function displayBlock(e){e.style.display="block"}function displayFlex(e){e.style.display="flex"}function addClass(e,o){e.classList.add(o)}function updateBackgroundColor(e,o){e.style.backgroundColor=o}function updateContentText(e,o){e.textContent=o}function updateSoundUiOn(){soundOffBtn.style.color=textColor,soundOffBtn.style.cursor="pointer",soundOnBtn.style.color=textColorDisabled,soundOnBtn.style.cursor="default"}function updateSoundUiOff(){soundOnBtn.style.color=textColor,soundOnBtn.style.cursor="pointer",soundOffBtn.style.color=textColorDisabled,soundOffBtn.style.cursor="default"}function play(){displayNone(welcomeMenu),displayBlock(mainMenu),backgroundMusic.loop=!0,backgroundMusic.play()}function newGame(){displayNone(mainMenu),displayBlock(newGameMenu)}function options(){displayNone(mainMenu),displayBlock(optionsMenu),musicStatus?updateSoundUiOn():updateSoundUiOff()}function credits(){displayNone(mainMenu),displayBlock(creditsMenu)}function back(){displayNone(newGameMenu),displayNone(optionsMenu),displayNone(creditsMenu),displayBlock(mainMenu)}function soundOn(){musicStatus||(updateSoundUiOn(),musicStatus=!0,backgroundMusic.play())}function soundOff(){musicStatus&&(updateSoundUiOff(),musicStatus=!1,backgroundMusic.load())}function startGame(e){game=new Game(e),back(),displayNone(menuScreen),displayBlock(gameScreen),setupGameScreen()}function setupGameScreen(){for(let e=0;e<game.codeMaker.length;e++){const o=createDiv();addClass(o,"color-pegs-4"),updateBackgroundColor(o,game.codeMaker[e]),codeMakerPalette.appendChild(o)}setupInitialGuessRow()}function setupInitialGuessRow(){currentRowCodePegs=[],currentRowKeyPegsHolder=[],game.currentCodeBreakerPattern=[];const e=createDiv();addClass(e,"row"),guesses.prepend(e);const o=createDiv();addClass(o,"attempt-number"),e.appendChild(o);const t=createDiv();t.textContent=game.attempt,o.appendChild(t);const n=createDiv();addClass(n,"guess-palette"),e.appendChild(n);for(let e=0;e<game.codeMaker.length;e++){const e=createDiv();game.difficultyLevel==Difficulty.ENGINEER?addClass(e,"code-peg-holder-6pegs"):addClass(e,"code-peg-holder-4pegs"),n.appendChild(e);const o=createDiv();updateBackgroundColor(o,emptyPegColor),e.appendChild(o),currentRowCodePegs.push(o)}const a=createDiv();addClass(a,"feedback-holder"),e.appendChild(a);const d=createDiv();a.appendChild(d);let s=2;game.difficultyLevel==Difficulty.ENGINEER&&(s=3);for(let e=0;e<2;e++){const e=createDiv();d.appendChild(e);for(let o=0;o<s;o++){const o=createDiv();addClass(o,"key-peg-holder"),e.appendChild(o),currentRowKeyPegsHolder.push(o)}}musicStatus||(soundImg.src="images/mute.png")}function onClickCodePeg(e){let o=!0;for(let t=0;t<currentRowCodePegs.length;t++){if(game.difficultyLevel==Difficulty.BEGINNER&&currentRowCodePegs[t].style.backgroundColor==e){showDialog(DialogCases.DUPLICATES),o=!1;break}if(currentRowCodePegs[t].style.backgroundColor==emptyPegColor){updateBackgroundColor(currentRowCodePegs[t],e),game.currentCodeBreakerPattern.push(e),console.log(game.currentCodeBreakerPattern),o=!1;break}}o&&showDialog(DialogCases.PEGS_FILLED)}function decode(){let e=!0;for(let o=0;o<currentRowCodePegs.length;o++)currentRowCodePegs[o].style.backgroundColor==emptyPegColor&&(e=!1);if(console.log(game.currentCodeBreakerPattern),e){const e=game.getFeedback();for(let o=0;o<e.length;o++){const t=createDiv();updateBackgroundColor(t,e[o]),currentRowKeyPegsHolder[o].appendChild(t)}console.log(game.isGameOver()),game.isGameOver()&&game.userWon?showDialog(DialogCases.GAME_OVER_WIN):game.isGameOver()&&!game.userWon?showDialog(DialogCases.GAME_OVER_LOSE):(game.attempt++,setupInitialGuessRow(),guesses.scrollTop=0)}else showDialog(DialogCases.PEG_NOT_FILLED)}function clearRow(){currentRowCodePegs.forEach(function(e){updateBackgroundColor(e,emptyPegColor)}),game.currentCodeBreakerPattern=[]}function toggleSound(){musicStatus?(musicStatus=!1,backgroundMusic.load(),soundImg.src="images/mute.png"):(musicStatus=!0,backgroundMusic.play(),soundImg.src="images/unmute.png")}function adjustGuessesHeight(){const e=window.outerHeight;guesses.style.maxHeight=e<750?e-283+"px":"465px"}function showDialog(e){switch(updateContentText(dialogBody,e),displayFlex(dialogBox),e){case DialogCases.GAME_OVER_WIN:case DialogCases.GAME_OVER_LOSE:updateContentText(dialogTitle,"Game Over"),updateContentText(dialogQuitBtn,"Menu"),displayNone(dialogCloseBtn),displayBlock(dialogHeader),displayBlock(dialogRestartBtn),displayBlock(dialogQuitBtn),displayFlex(dialogButtons);break;default:setTimeout(function(){closeDialog()},1500)}}function closeDialog(){updateContentText(dialogBody,""),updateContentText(dialogQuitBtn,""),displayNone(dialogBox),displayBlock(dialogCloseBtn),displayNone(dialogHeader),displayNone(dialogRestartBtn),displayNone(dialogQuitBtn),displayNone(dialogButtons)}function restartGame(){console.log("restart game")}function quitGame(){console.log("quit game")}let welcomeMenu,mainMenu,newGameMenu,optionsMenu,creditsMenu,soundOnBtn,soundOffBtn,menuScreen,gameScreen,dialogBox,game,codeMakerPalette,soundImg,guesses,decodeBtn,clearBtn,dialogHeader,dialogTitle,dialogCloseBtn,dialogBody,dialogButtons,dialogRestartBtn,dialogQuitBtn,musicStatus=!0;const backgroundMusic=new Audio("sounds/Dreaming.ogg"),textColor="#ccc",textColorDisabled="red";window.onload=function(){welcomeMenu=getId("welcome-menu"),mainMenu=getId("main-menu"),newGameMenu=getId("new-game-menu"),optionsMenu=getId("options-menu"),creditsMenu=getId("credits-menu"),menuScreen=getId("menu-screen"),gameScreen=getId("game-screen"),dialogBox=getId("dialog-box"),soundOnBtn=getId("sound-on-btn"),soundOffBtn=getId("sound-off-btn"),codeMakerPalette=getId("code-maker-palette"),soundImg=getId("game-sound-btn"),guesses=getId("guesses"),decodeBtn=getId("decode-btn"),clearBtn=getId("clear-btn"),dialogHeader=getId("dialog-header"),dialogTitle=getId("dialog-title"),dialogCloseBtn=getId("dialog-close-btn"),dialogBody=getId("dialog-body"),dialogButtons=getId("dialog-buttons"),dialogRestartBtn=getId("dialog-restart-btn"),dialogQuitBtn=getId("dialog-quit-btn"),displayNone(mainMenu),displayNone(newGameMenu),displayNone(optionsMenu),displayNone(creditsMenu),displayNone(gameScreen),displayNone(dialogBox),displayFlex(document.getElementsByTagName("main")[0]),backgroundMusic.preload="auto",adjustGuessesHeight(),displayNone(menuScreen),displayBlock(gameScreen),game=new Game(Difficulty.DEVELOPER),setupGameScreen()},window.onresize=function(){setTimeout(adjustGuessesHeight(),100)};let currentRowCodePegs=[],currentRowKeyPegsHolder=[],emptyPegColor="rgba(0, 0, 0, 0)";const DialogCases={PEGS_FILLED:"All pegs are filled",PEG_NOT_FILLED:"All pegs must be filled",DUPLICATES:"Duplicates are not allowed in Beginner level",GAME_OVER_WIN:"Congrats! You have decoded the pattern successfully",GAME_OVER_LOSE:"You have failed to decode the pattern"};