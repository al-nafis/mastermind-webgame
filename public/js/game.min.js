const Difficulty={BEGINNER:"Beginner",DEVELOPER:"Developer",ENGINEER:"Engineer"},Colors=["red","blue","green","yellow","white","black"],totalAttemptsLimit=10;class Game{constructor(t){this.difficultyLevel=t,this.totalMatch=0,this.attempt=1,this.codeMaker=function(){const e=[];let l=4;if(t==Difficulty.BEGINNER){const t=Colors.slice();for(let a=0;a<l;a++){let l=Math.floor(Math.random()*t.length);e.push(t[l]),t.splice(l,1)}}else{t==Difficulty.ENGINEER&&(l=6);for(let t=0;t<l;t++){let t=Math.floor(Math.random()*Colors.length);e.push(Colors[t])}}return e}(),this.currentCodeBreakerPattern=[],this.userWon=!1}getFeedback(){const t=[],e=this.codeMaker.slice(),l=this.currentCodeBreakerPattern.slice();this.totalMatch=0;for(let a=0;a<e.length;a++)e[a]==l[a]&&(t.push("black"),e[a]="parallelMatch",l[a]="parallelMatch",this.totalMatch++);for(let a=0;a<e.length;a++)if("parallelMatch"!=e[a]&&"lineMatch"!=e[a])for(let r=0;r<l.length;r++)"parallelMatch"!=l[r]&&"lineMatch"!=l[r]&&e[a]==l[r]&&(t.push("white"),e[a]="lineMatch",l[r]="lineMatch");return t}isGameOver(){return this.totalMatch==this.codeMaker.length?(this.userWon=!0,!0):this.attempt>=10}}